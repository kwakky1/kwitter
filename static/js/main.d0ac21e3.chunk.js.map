{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Kweet.js","components/KweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","preventDefault","target","name","value","onSubmit","a","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Kweet","kweetObj","isOwner","editing","setEditing","text","newKweet","setNewKweet","onDeleteClick","window","confirm","doc","id","delete","imageUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","KweetFactory","userObj","kweet","setKweet","image","setImage","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","kweets","setKweets","useEffect","orderBy","onSnapshot","snapshot","kweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","onsubmit","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ac21e3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import React, {useState} from 'react';\nimport {authService} from \"../fbase\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [newAccount, setNewAccount] = useState(true)\n    const [error, setError] = useState(\"\")\n    const onChange = (e) => {\n        e.preventDefault();\n\n        const {\n            target: {name, value},\n        } = e;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error)  {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => {\n        setNewAccount((prev) => !prev);\n    };\n    return (\n        <>\n            <form onSubmit={onSubmit} className={\"container\"}>\n                <input\n                    name={\"email\"}\n                    type=\"text\"\n                    placeholder={\"Email\"}\n                    required\n                    onChange={onChange}\n                    value={email}\n                    className={\"authInput\"}\n                />\n                <input name={\"password\"}\n                       type=\"password\"\n                       placeholder={\"Password\"}\n                       required\n                       onChange={onChange}\n                       value={password}\n                       className={\"authInput\"}\n                />\n                <input type=\"submit\"\n                       value={newAccount ? \"Create Account\":\"Log In\"}\n                       className={\"authInput authSubmit\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {authService, firebaseInstance} from \"../fbase\";\nimport AuthForm from 'components/AuthForm'\n\nconst Auth = () => {\n    const onSocialClick = async (e) => {\n        const {target : {name},\n        } = e;\n        let provider\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n    return (\n        <div className={\"authContainer\"}>\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size={\"3x\"}\n                style={{marginBottom: 30}}\n            />\n            <AuthForm/>\n            <div className={\"authBtns\"}>\n                <button onClick={onSocialClick} name={\"google\"} className={\"authBtn\"}>\n                    구글 아이디로 로그인 <FontAwesomeIcon icon={faGoogle}/>\n                </button>\n                <button onClick={onSocialClick} name={\"github\"} className={\"authBtn\"}>\n                    깃허브 아이디로 로그인 <FontAwesomeIcon icon={faGithub}/>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, {useState} from 'react';\nimport {dbService, storageService} from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Kweet = ({ kweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newKweet, setNewKweet] = useState(kweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"이 트윗을 지우길 원하십니까?\")\n        if(ok){\n            await dbService.doc(`kweets/${kweetObj.id}`).delete();\n            if(kweetObj.imageUrl !== \"\") {\n                await storageService.refFromURL(kweetObj.imageUrl).delete();\n            }\n        }\n    }\n\n    const toggleEditing = () => {\n        setEditing((prev)=> !prev);\n        setNewKweet(\"\");\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await dbService.doc(`kweets/${kweetObj.id}`).update({\n            text: newKweet\n        })\n        setEditing(false);\n    }\n\n    const onChange = (e) => {\n        const {\n            target : {value}\n        } = e;\n        setNewKweet(value);\n    }\n\n\n    return (\n        <div className={\"kweet\"}>\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit} className={\"container kweetEdit\"}>\n                                <input type={\"text\"}\n                                       placeholder={\"수정하기\"}\n                                       value={newKweet}\n                                       required\n                                       autoFocus\n                                       onChange={onChange}\n                                       className={\"formInput\"}\n                                />\n                                <input type=\"submit\" value={\"트윗 수정\"} className={\"formBtn\"}/>\n                            </form>\n\n                            <button onClick={toggleEditing} className={\"formBtn cancelBtn\"}>\n                                취소\n                            </button>\n                        </>)\n                    }\n                </>\n\n            ) : (\n                <>\n                    <h4>{kweetObj.text}</h4>\n                    {kweetObj.imageUrl && <img src={kweetObj.imageUrl} alt=\"profile\"/>}\n\n                    {isOwner && (\n                        <div className={\"kweet__actions\"}>\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash}/>\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt}/>\n                            </span>\n                        </div>\n                    )}\n                </>)\n            }\n        </div>\n\n    );\n};\n\nexport default Kweet;","import React, {useState, useEffect} from 'react';\nimport {dbService, storageService} from \"../fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst KweetFactory = ( {userObj} ) => {\n    const [kweet, setKweet] = useState(\"\");\n    const [image, setImage] = useState(\"\")\n\n   /* useEffect(()=>{\n        return () => setImage(\"\");\n    }, [])*/\n\n    const onSubmit = async (e) =>{\n        e.preventDefault();\n        if(kweet === \"\"){\n            return;\n        }\n        let imageUrl = \"\";\n        if(image !== \"\") {\n            const fileRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await fileRef.putString(image, \"data_url\");\n            imageUrl = await response.ref.getDownloadURL()\n        }\n        const kweetObj = {\n            text : kweet,\n            createdAt : Date.now(),\n            creatorId: userObj.uid,\n            imageUrl\n        };\n        await dbService.collection(\"kweets\").add(kweetObj);\n        setKweet(\"\");\n        setImage(\"\");\n    }\n    const onChange = (e) => {\n        const {\n            target : { value },\n        } = e;\n        setKweet(value);\n    }\n    const onFileChange = (e) => {\n        const {\n            target : { files },\n        } = e;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) =>{\n            const {currentTarget : { result }} = finishedEvent;\n            setImage(result);\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n    const onClearPhotoClick = () => {\n        setImage(\"\");\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={\"factoryForm\"}>\n            <div className={\"factoryInput__container\"}>\n                <input\n                    className={\"factoryInput__input\"}\n                    value={kweet}\n                    type=\"text\"\n                    placeholder={\"What's on your mind?\"}\n                    maxLength={120}\n                    onChange={onChange}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className={\"factoryInput__arrow\"}/>\n            </div>\n            <label htmlFor={\"image-file\"} className={\"factoryInput__label\"}>\n                <span>Add Photos</span>\n                <FontAwesomeIcon icon={faPlus}/>\n            </label>\n            <input\n                id={\"image-file\"}\n                type=\"file\"\n                accept={\"image/*\"}\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {image && (\n                <div className={\"factoryForm__image\"}>\n                    <img\n                        src={image}\n                        alt=\"img\"\n                        style={{\n                            backgroundImage: image\n                        }}\n                    />\n                    <div className={\"factoryForm__clear\"} onClick={onClearPhotoClick}>\n                        <span>지우기</span>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </div>\n                </div>\n            )}\n\n        </form>\n    );\n};\n\nexport default KweetFactory;","import React, {useState, useEffect} from 'react';\nimport {dbService} from \"../fbase\";\nimport Kweet from \"../components/Kweet\";\nimport KweetFactory from \"components/KweetFactory\"\n\nconst Home = ({userObj}) => {\n\n    const [kweets, setKweets] = useState([]);\n\n    useEffect(() => {\n        dbService\n            .collection(\"kweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot(snapshot =>{\n            const kweetArray = snapshot.docs.map(doc => (\n                {id: doc.id,\n                ...doc.data()\n                }));\n            setKweets(kweetArray);\n        })\n    },[]);\n\n\n    return (\n        <div className={\"container\"}>\n            <KweetFactory userObj={userObj}/>\n            <div style={{ marginTop: 30}}>\n                {kweets.map((kweet) => (\n                    <Kweet key={kweet.id} kweetObj={kweet} isOwner={kweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\n                <li>\n                    <Link to={\"/\"} style={{ marginRight: 10 }}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size={\"2x\"}/>\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName\n                                ? `${userObj.displayName}의 Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;","import React, {useState} from 'react';\nimport {authService} from \"../fbase\";\nimport {useHistory} from \"react-router-dom\"\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n\n    const onLogOutClink = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    }\n\n    // firebase 데이터베이스 접근방법\n\n    /*const getMyKweets = async () => {\n        const kweets = await dbService\n            .collection(\"kweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .get();\n        console.log(kweets.docs.map((doc)=> doc.data()));\n    }*/\n    const onChange = (e) => {\n        const {target: {value}} = e;\n        setNewDisplayName(value);\n    };\n\n    const onsubmit = async (e) => {\n        e.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n    return (\n        <div className={\"container\"}>\n            <form onSubmit={onsubmit} className={\"profileForm\"}>\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder={\"Display Name\"}\n                    value={newDisplayName}\n                    className={\"formInput\"}\n                />\n                <input\n                    type=\"submit\"\n                    value={\"Update Profile\"}\n                    className={\"formBtn\"}\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className={\"formBtn cancelBtn logOut\"} onClick={onLogOutClink}>\n                로그아웃\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} /> }\n            <Switch>\n                <>\n                {isLoggedIn ? (\n                <div\n                    style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\n                    </Route>\n                </div>\n                ): (<Route exact Path=\"/\">\n                    <Auth/>\n                </Route>\n                )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, {useState, useEffect} from 'react';\nimport AppRouter from \"components/AppRouter\";\nimport {authService} from \"fbase\";\nimport \"styles.css\"\n\nconst App = () => {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n         authService.onAuthStateChanged((user) => {\n             if(user) {\n                 setUserObj({\n                     displayName: user.displayName,\n                     uid: user.uid,\n                     updateProfile: (args) => user.updateProfile(args),\n                 })\n             } else {\n                 setUserObj(null);\n             }\n             setInit(true);\n         });\n    },[]);\n\n    const refreshUser = () => {\n        const user = authService.currentUser\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    }\n\n    return (\n        <>\n            {init ?\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n                : \"Initializing...\"}\n          <footer className={\"footer\"}>&copy; {new Date().getFullYear()} Kwitter</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}